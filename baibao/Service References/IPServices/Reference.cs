//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace baibao.IPServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://WebXml.com.cn/", ConfigurationName="IPServices.IpAddressSearchWebServiceSoap")]
    public interface IpAddressSearchWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/getCountryCityByIp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetCountryCityByIp(string theIpAddress, System.AsyncCallback callback, object asyncState);
        
        string[] EndgetCountryCityByIp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/getGeoIPContext", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetGeoIPContext(System.AsyncCallback callback, object asyncState);
        
        string[] EndgetGeoIPContext(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/getVersionTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetVersionTime(System.AsyncCallback callback, object asyncState);
        
        string EndgetVersionTime(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IpAddressSearchWebServiceSoapChannel : baibao.IPServices.IpAddressSearchWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getCountryCityByIpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getCountryCityByIpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getGeoIPContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getGeoIPContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getVersionTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getVersionTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IpAddressSearchWebServiceSoapClient : System.ServiceModel.ClientBase<baibao.IPServices.IpAddressSearchWebServiceSoap>, baibao.IPServices.IpAddressSearchWebServiceSoap {
        
        private BeginOperationDelegate onBegingetCountryCityByIpDelegate;
        
        private EndOperationDelegate onEndgetCountryCityByIpDelegate;
        
        private System.Threading.SendOrPostCallback ongetCountryCityByIpCompletedDelegate;
        
        private BeginOperationDelegate onBegingetGeoIPContextDelegate;
        
        private EndOperationDelegate onEndgetGeoIPContextDelegate;
        
        private System.Threading.SendOrPostCallback ongetGeoIPContextCompletedDelegate;
        
        private BeginOperationDelegate onBegingetVersionTimeDelegate;
        
        private EndOperationDelegate onEndgetVersionTimeDelegate;
        
        private System.Threading.SendOrPostCallback ongetVersionTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public IpAddressSearchWebServiceSoapClient() {
        }
        
        public IpAddressSearchWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IpAddressSearchWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IpAddressSearchWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IpAddressSearchWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<getCountryCityByIpCompletedEventArgs> getCountryCityByIpCompleted;
        
        public event System.EventHandler<getGeoIPContextCompletedEventArgs> getGeoIPContextCompleted;
        
        public event System.EventHandler<getVersionTimeCompletedEventArgs> getVersionTimeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult baibao.IPServices.IpAddressSearchWebServiceSoap.BegingetCountryCityByIp(string theIpAddress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetCountryCityByIp(theIpAddress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] baibao.IPServices.IpAddressSearchWebServiceSoap.EndgetCountryCityByIp(System.IAsyncResult result) {
            return base.Channel.EndgetCountryCityByIp(result);
        }
        
        private System.IAsyncResult OnBegingetCountryCityByIp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string theIpAddress = ((string)(inValues[0]));
            return ((baibao.IPServices.IpAddressSearchWebServiceSoap)(this)).BegingetCountryCityByIp(theIpAddress, callback, asyncState);
        }
        
        private object[] OnEndgetCountryCityByIp(System.IAsyncResult result) {
            string[] retVal = ((baibao.IPServices.IpAddressSearchWebServiceSoap)(this)).EndgetCountryCityByIp(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetCountryCityByIpCompleted(object state) {
            if ((this.getCountryCityByIpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getCountryCityByIpCompleted(this, new getCountryCityByIpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getCountryCityByIpAsync(string theIpAddress) {
            this.getCountryCityByIpAsync(theIpAddress, null);
        }
        
        public void getCountryCityByIpAsync(string theIpAddress, object userState) {
            if ((this.onBegingetCountryCityByIpDelegate == null)) {
                this.onBegingetCountryCityByIpDelegate = new BeginOperationDelegate(this.OnBegingetCountryCityByIp);
            }
            if ((this.onEndgetCountryCityByIpDelegate == null)) {
                this.onEndgetCountryCityByIpDelegate = new EndOperationDelegate(this.OnEndgetCountryCityByIp);
            }
            if ((this.ongetCountryCityByIpCompletedDelegate == null)) {
                this.ongetCountryCityByIpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetCountryCityByIpCompleted);
            }
            base.InvokeAsync(this.onBegingetCountryCityByIpDelegate, new object[] {
                        theIpAddress}, this.onEndgetCountryCityByIpDelegate, this.ongetCountryCityByIpCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult baibao.IPServices.IpAddressSearchWebServiceSoap.BegingetGeoIPContext(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetGeoIPContext(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] baibao.IPServices.IpAddressSearchWebServiceSoap.EndgetGeoIPContext(System.IAsyncResult result) {
            return base.Channel.EndgetGeoIPContext(result);
        }
        
        private System.IAsyncResult OnBegingetGeoIPContext(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((baibao.IPServices.IpAddressSearchWebServiceSoap)(this)).BegingetGeoIPContext(callback, asyncState);
        }
        
        private object[] OnEndgetGeoIPContext(System.IAsyncResult result) {
            string[] retVal = ((baibao.IPServices.IpAddressSearchWebServiceSoap)(this)).EndgetGeoIPContext(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetGeoIPContextCompleted(object state) {
            if ((this.getGeoIPContextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getGeoIPContextCompleted(this, new getGeoIPContextCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getGeoIPContextAsync() {
            this.getGeoIPContextAsync(null);
        }
        
        public void getGeoIPContextAsync(object userState) {
            if ((this.onBegingetGeoIPContextDelegate == null)) {
                this.onBegingetGeoIPContextDelegate = new BeginOperationDelegate(this.OnBegingetGeoIPContext);
            }
            if ((this.onEndgetGeoIPContextDelegate == null)) {
                this.onEndgetGeoIPContextDelegate = new EndOperationDelegate(this.OnEndgetGeoIPContext);
            }
            if ((this.ongetGeoIPContextCompletedDelegate == null)) {
                this.ongetGeoIPContextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetGeoIPContextCompleted);
            }
            base.InvokeAsync(this.onBegingetGeoIPContextDelegate, null, this.onEndgetGeoIPContextDelegate, this.ongetGeoIPContextCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult baibao.IPServices.IpAddressSearchWebServiceSoap.BegingetVersionTime(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetVersionTime(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string baibao.IPServices.IpAddressSearchWebServiceSoap.EndgetVersionTime(System.IAsyncResult result) {
            return base.Channel.EndgetVersionTime(result);
        }
        
        private System.IAsyncResult OnBegingetVersionTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((baibao.IPServices.IpAddressSearchWebServiceSoap)(this)).BegingetVersionTime(callback, asyncState);
        }
        
        private object[] OnEndgetVersionTime(System.IAsyncResult result) {
            string retVal = ((baibao.IPServices.IpAddressSearchWebServiceSoap)(this)).EndgetVersionTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetVersionTimeCompleted(object state) {
            if ((this.getVersionTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getVersionTimeCompleted(this, new getVersionTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getVersionTimeAsync() {
            this.getVersionTimeAsync(null);
        }
        
        public void getVersionTimeAsync(object userState) {
            if ((this.onBegingetVersionTimeDelegate == null)) {
                this.onBegingetVersionTimeDelegate = new BeginOperationDelegate(this.OnBegingetVersionTime);
            }
            if ((this.onEndgetVersionTimeDelegate == null)) {
                this.onEndgetVersionTimeDelegate = new EndOperationDelegate(this.OnEndgetVersionTime);
            }
            if ((this.ongetVersionTimeCompletedDelegate == null)) {
                this.ongetVersionTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetVersionTimeCompleted);
            }
            base.InvokeAsync(this.onBegingetVersionTimeDelegate, null, this.onEndgetVersionTimeDelegate, this.ongetVersionTimeCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override baibao.IPServices.IpAddressSearchWebServiceSoap CreateChannel() {
            return new IpAddressSearchWebServiceSoapClientChannel(this);
        }
        
        private class IpAddressSearchWebServiceSoapClientChannel : ChannelBase<baibao.IPServices.IpAddressSearchWebServiceSoap>, baibao.IPServices.IpAddressSearchWebServiceSoap {
            
            public IpAddressSearchWebServiceSoapClientChannel(System.ServiceModel.ClientBase<baibao.IPServices.IpAddressSearchWebServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BegingetCountryCityByIp(string theIpAddress, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = theIpAddress;
                System.IAsyncResult _result = base.BeginInvoke("getCountryCityByIp", _args, callback, asyncState);
                return _result;
            }
            
            public string[] EndgetCountryCityByIp(System.IAsyncResult result) {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("getCountryCityByIp", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetGeoIPContext(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getGeoIPContext", _args, callback, asyncState);
                return _result;
            }
            
            public string[] EndgetGeoIPContext(System.IAsyncResult result) {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("getGeoIPContext", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetVersionTime(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getVersionTime", _args, callback, asyncState);
                return _result;
            }
            
            public string EndgetVersionTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("getVersionTime", _args, result)));
                return _result;
            }
        }
    }
}
